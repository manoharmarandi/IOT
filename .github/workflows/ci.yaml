name: CI

on: # yamllint disable-line rule:truthy
  push:
    branches:
      - main
  workflow_dispatch:

# env:
#   ACR_IMAGE_PATH_FRONTEND: ${{ secrets.ACR_LOGIN_SERVER }}/frontendmodule:1.0.${{ github.run_number }}-amd64
#   ACR_IMAGE_PATH_BACKEND: ${{ secrets.ACR_LOGIN_SERVER }}/backendmodule:1.0.${{ github.run_number }}-amd64

jobs:
  build:
    permissions:
      id-token: write
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Install dependencies
        run: |
          make install

      - name: Build backend docker image
        run: |
          IMAGE=iot-backend
          cd ./EdgeSolution/modules/BackendModule
          docker build -f Dockerfile.amd64 -t $IMAGE .
          echo "::set-output name=image::$IMAGE"

      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: 'iot-backend'
      #     cache-dir: '/var/lib/trivy'
      #     exit-code: '0'
      #     severity: 'MEDIUM,HIGH,CRITICAL,LOW'

      # - name: Run the Anchore Grype scan action
      #   uses: anchore/scan-action@d5aa5b6cb9414b0c7771438046ff5bcfa2854ed7
      #   id: scan
      #   with:
      #     image: "iot-backend"
      #     fail-build: false
      #     acs-report-enable: true
      #     severity-cutoff: critical

      # - name: Upload vulnerability report
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: snyk test
        continue-on-error: true
        run: |-
          npm install snyk -g
          snyk auth e6b5719c-46fa-4dd7-8cf1-50ebd68923ae
          snyk container test iot-backend --sarif

      - name: Run Snyk to check Docker image for vulnerabilities
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/docker@14818c4695ecc4045f33c9cee9e795a788711ca4
        env:
        # In order to use the Snyk Action you will need to have a Snyk API token.
        # More details in https://github.com/snyk/actions#getting-your-snyk-token
        # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: iot-backend
          args: --file=./EdgeSolution/modules/BackendModule/Dockerfile.amd64

      # - name: Build frontend docker image
      #   run: |
      #     IMAGE=iot-frontend
      #     cd ./EdgeSolution/modules/FrontendModule
      #     docker build -f Dockerfile.amd64 -t $IMAGE .
      #     echo "::set-output name=image::$IMAGE"

      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: 'iot-frontend'
      #     cache-dir: '/var/lib/trivy'
      #     exit-code: '0'
      #     severity: 'MEDIUM,HIGH,CRITICAL,LOW'

      # - name: Run the Anchore Grype scan action
      #   uses: anchore/scan-action@d5aa5b6cb9414b0c7771438046ff5bcfa2854ed7
      #   id: scan2
      #   with:
      #     image: "iot-backend"
      #     fail-build: false
      #     acs-report-enable: true
      #     severity-cutoff: critical

      # - name: Upload vulnerability report
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: ${{ steps.scan.outputs.sarif }}

      # - name: snyk test
      #   continue-on-error: true
      #   run: |-
      #      npm install snyk -g
      #      snyk auth e6b5719c-46fa-4dd7-8cf1-50ebd68923ae
      #      snyk container test iot-frontend --json-file-output=vuln.json
      
      # - name: Run Snyk to check Docker image for vulnerabilities
      #   # Snyk can be used to break the build when it detects vulnerabilities.
      #   # In this case we want to upload the issues to GitHub Code Scanning
      #   continue-on-error: true
      #   uses: snyk/actions/docker@14818c4695ecc4045f33c9cee9e795a788711ca4
      #   env:
      #   # In order to use the Snyk Action you will need to have a Snyk API token.
      #   # More details in https://github.com/snyk/actions#getting-your-snyk-token
      #   # or you can signup for free at https://snyk.io/login
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   with:
      #     image: iot-frontend
      #     args: --file=./EdgeSolution/modules/BackendModule/Dockerfile.amd64
      # # - name: Push backend docker image
      # #   run: |
      # #     docker push ${{env.ACR_IMAGE_PATH_BACKEND}}

      # # - name: Push frontend docker image
      # #   run: |
      # #     docker push ${{env.ACR_IMAGE_PATH_FRONTEND}}
